{"version":3,"sources":["auth.js","entities/apiDictonary.js","entities/provider.js","Layout/SubMenu.js","Layout/Menu.jsx","Layout/Actions.jsx","entities/vaccine/VaccineList.jsx","entities/diseas/DiseasList.jsx","entities/vaccine/VaccineEdit.jsx","entities/vaccine/VaccineCreate.jsx","entities/diseas/DiseasEdit.jsx","entities/diseas/DiseasCreate.jsx","components/NotFound/NotFound.jsx","static/theme.js","entities/questions/QuestionsList.jsx","entities/questions/QuestoinEdit.jsx","entities/questions/CreateQuestion.jsx","entities/answers/AnswersList.jsx","entities/answers/AnswerEdit.jsx","entities/answers/AnswerCreate.jsx","App.js","index.js"],"names":["api","Directual","apiHost","authContext","createContext","ProvideAuth","children","auth","useState","user","setUser","sessionID","setSessionID","role","setRole","useEffect","sid","window","localStorage","getItem","isAuthorize","status","token","username","login","password","then","res","setItem","isAutorised","signout","cb","logout","hasRole","roleCheck","useProvideAuth","Provider","value","getList","structure","endPoint","formFilter","filters","q","getOne","getMany","idsFormat","ids","map","i","id","join","getManyReference","update","formatData","data","diseases","ownLogick","resource","params","prevAnswersIds","previousData","answers","a","currentAnswersIds","intersection","_","includes","setData","isDelete","r","result","answer","diseasIds","d","PollItemId","pollId","updateMany","create","fieldToDelete","delete","deleteMany","getApiInfo","routeName","method","apiInfo","apiDictionary","Error","page","pagination","pageSize","perPage","sort","field","order","toLowerCase","filter","getData","response","payload","total","pageInfo","tableSize","catch","err","console","log","getFormatIds","filedToDelete","useStyles","makeStyles","theme","icon","minWidth","spacing","sidebarIsOpen","paddingLeft","transition","sidebarIsClosed","SubMenu","handleToggle","isOpen","name","dense","translate","useTranslate","classes","header","MenuItem","button","onClick","ListItemIcon","className","Typography","variant","color","Tooltip","title","placement","Collapse","in","timeout","unmountOnExit","component","disablePadding","Menu","onMenuClick","menuCatalog","menuSales","menuCustomers","state","setState","isXSmall","useMediaQuery","breakpoints","down","open","useSelector","admin","ui","sidebarOpen","Box","mt","MenuItemLink","to","primaryText","leftIcon","menu","ListActions","props","exporter","maxResults","rest","useListContext","currentSort","displayedFilters","filterValues","basePath","hasCreate","showFilter","selectedIds","TopToolbar","sanitizeListRestProps","cloneElement","context","CreateButton","label","ExportButton","disabled","VaccineFilter","Filter","TextInput","source","always-on","VaccinePanel","record","Chip","key","clickable","Link","paragraph","description","VaccineList","List","actions","Datagrid","expand","isRowSelectable","TextField","EditButton","DiseasFilter","DiseasList","rowClick","VaccineTitle","VaccineEdit","Edit","SimpleForm","fullWidth","helperText","multiline","ArrayInput","SimpleFormIterator","addButton","Button","ReferenceInput","reference","resettable","SelectInput","VaccineCreate","Create","DiseasTitle","DiseasEdit","DiseasCreate","Card","Title","CardContent","createMuiTheme","palette","primary","indigo","secondary","blue","error","red","contrastThreshold","tonalOffset","typography","fontFamily","overrides","MuiButton","root","QuestionPanel","text","QuestionList","QuestionTitle","question","QuestionEdit","removeButton","style","padding","fontSize","verticalAlign","QuestionCreateTitle","QuestionCreate","AnswerPanel","background","orange","AnswerTitle","AnswerList","ReferenceField","AnswerEdit","optionText","AnswerCreate","App","Admin","dataProvider","catchAll","NotFound","Resource","list","edit","PostIcon","options","BugReport","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cfee04a.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport Directual from 'directual-api';\r\n\r\nconst api = new Directual({apiHost: '/'});\r\n\r\nexport const authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\n// Provide hook that creates auth object and handles state\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n  const [sessionID, setSessionID] = useState(null);\r\n  const [role, setRole] = useState(null);\r\n\r\n  const login = (username, password) => {\r\n    return api.auth.login(username, password).then(res=>{\r\n      setUser(res.username)\r\n      setSessionID(res.sessionID)\r\n      setRole(res.role)\r\n      window.localStorage.setItem('sid', res.sessionID)\r\n    })\r\n  };\r\n\r\n  const signout = (cb) => {\r\n    return api.auth.logout('').then(res=>{\r\n      setUser(null)\r\n      setRole(null)\r\n      setSessionID(null)\r\n      window.localStorage.setItem('sid', null)\r\n      cb()\r\n    })\r\n  };\r\n\r\n  const isAutorised = () => {\r\n    return !!user\r\n  }\r\n\r\n  const hasRole = (roleCheck) => {\r\n    if(!roleCheck){\r\n      return true\r\n    }\r\n    return role === roleCheck\r\n  }\r\n\r\n  useEffect(() => {\r\n    let sid = window.localStorage.getItem('sid') || ''\r\n    api.auth.isAuthorize(sid, (status, token)=>{\r\n      if(status === true){\r\n        setUser(token.username)\r\n        setSessionID(token.token)\r\n        setRole(token.role)\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  return {\r\n    user,\r\n    sessionID,\r\n    login,\r\n    isAutorised,\r\n    signout,\r\n    hasRole\r\n  };\r\n}","import _ from 'lodash';\r\nimport Directual from 'directual-api';\r\n\r\nconst api = new Directual({ apiHost: '/' });\r\n\r\n\r\nexport default {\r\n  getList: {\r\n    'vaccine': {\r\n      structure: 'Vaccine',\r\n      endPoint: 'addVaccine',\r\n      formFilter(filters) {\r\n        if (!filters.q) return {};\r\n        return filters;\r\n      }\r\n    },\r\n    'diseas': {\r\n      structure: 'Diseas',\r\n      endPoint: 'addDiseas'\r\n    },\r\n    'questions': {\r\n      structure: 'PollItem',\r\n      endPoint: 'pollItem'\r\n    },\r\n    'answers': {\r\n      structure: 'Answer',\r\n      endPoint: 'answer'\r\n    }\r\n  },\r\n\r\n  getOne: {\r\n    'vaccine': {\r\n      structure: 'Vaccine',\r\n      endPoint: 'getVaccinesByIds'\r\n    },\r\n    'diseas': {\r\n      structure: 'Diseas',\r\n      endPoint: 'getDiseasesById'\r\n    },\r\n    'questions': {\r\n      structure: 'PollItem',\r\n      endPoint: 'getPollItemsByids'\r\n    },\r\n    'answers': {\r\n      structure: 'Answer',\r\n      endPoint: 'getAnswersByIds'\r\n    }\r\n  },\r\n\r\n  getMany: {\r\n    'vaccine': {\r\n      structure: 'Vaccine',\r\n      endPoint: 'getVaccinesByIds'\r\n    },\r\n    'diseas': {\r\n      structure: 'Diseas',\r\n      endPoint: 'getDiseasesById',\r\n      idsFormat(ids) {\r\n        return ids.map(i => i.id || i).join(',');\r\n      }\r\n    },\r\n    'questions': {\r\n      structure: 'PollItem',\r\n      endPoint: 'getPollItemsByids',\r\n      idsFormat(ids) {\r\n        return ids.map(i => i.id || i).join(',');\r\n      }\r\n    },\r\n    'answers': {\r\n      structure: 'Answer',\r\n      endPoint: 'getAnswersByIds',\r\n      idsFormat(ids) {\r\n        return ids.map(i => i.id || i).join(',');\r\n      }\r\n    }\r\n  },\r\n\r\n  getManyReference: {\r\n\r\n  },\r\n\r\n  update: {\r\n    'vaccine': {\r\n      structure: 'Vaccine',\r\n      endPoint: 'addVaccine',\r\n      formatData(data) {\r\n        if (data.diseases) {\r\n          data.diseases = data.diseases.map(i => i.id || i);\r\n        }\r\n        return data;\r\n      }\r\n    },\r\n    'diseas': {\r\n      structure: 'Diseas',\r\n      endPoint: 'addDiseas'\r\n    },\r\n    'questions': {\r\n      structure: 'PollItem',\r\n      endPoint: 'getPollItemsByids',\r\n      ownLogick(resource, params) {\r\n        const prevAnswersIds = params.previousData.answers.map(a => a.id);\r\n        const currentAnswersIds = params.data.answers.map(a => a.id);\r\n        const intersection = _.intersection(prevAnswersIds, currentAnswersIds) || [];\r\n\r\n\r\n        // удалим старые ненужные ответы\r\n        for (let id of prevAnswersIds || []) {\r\n          if (!intersection.includes(id)) {\r\n            api\r\n              .structure('Answer')\r\n              .setData('answer', { id: id, isDelete: true }, { sessionID: '' })\r\n              .then((r) => {\r\n                return {\r\n                  data: r.result[0]\r\n                };\r\n              });\r\n          }\r\n        }\r\n\r\n        // обновляем ответы и добавляем новые\r\n        for (let answer of params.data.answers || []) {\r\n          if (intersection.includes(answer.id) || !answer.id) {\r\n            const diseasIds = answer.diseasIds ? answer.diseasIds.map(d => d.id) : ''\r\n\r\n            api\r\n              .structure('Answer')\r\n              .setData('answer',\r\n                {\r\n                  ...answer,\r\n                  diseasIds: diseasIds,\r\n                  PollItemId: params.data.id,\r\n                  pollId: \"ea2c5b4e-c670-494c-9d1a-36c15615bbe5\"\r\n                }, { sessionID: '' })\r\n              .then((r) => {\r\n                return {\r\n                  data: r.result[0]\r\n                };\r\n              });\r\n          }\r\n        }\r\n\r\n        // обновление самого вопроса\r\n        delete params.data.pollId;\r\n        delete params.data.answers;\r\n        return api\r\n          .structure('PollItem')\r\n          .setData('pollItem', { ...params.data, answers: intersection.join(',') }, { sessionID: '' })\r\n          .then((r) => {\r\n            return {\r\n              data: r.result[0]\r\n            };\r\n          });\r\n      }\r\n    },\r\n    'answers': {\r\n      structure: 'Answer',\r\n      endPoint: 'answer',\r\n      formatData(data) {\r\n        if (data.diseasIds) {\r\n          data.diseasIds = data.diseasIds.map(i => i.id || i);\r\n        }\r\n        data.PollItemId = data.PollItemId.id;\r\n        return data;\r\n      }\r\n    }\r\n  },\r\n\r\n  updateMany: {\r\n\r\n  },\r\n\r\n  create: {\r\n    'vaccine': {\r\n      structure: 'Vaccine',\r\n      endPoint: 'addVaccine',\r\n      formatData(data) {\r\n        data.diseases = data.diseases.map(d => d.id);\r\n        return data;\r\n      }\r\n    },\r\n    'diseas': {\r\n      structure: 'Diseas',\r\n      endPoint: 'addDiseas',\r\n      fieldToDelete: 'toDelete'\r\n    },\r\n    'questions': {\r\n      structure: 'PollItem',\r\n      endPoint: 'getPollItemsByids',\r\n      ownLogick(resource, params) {\r\n        return api\r\n          .structure('PollItem')\r\n          .setData('pollItem', {\r\n            ...params.data,\r\n            answers: params.data.answers.join(',')\r\n          }, { sessionID: '' })\r\n          .then((r) => {\r\n            // так как нам нужен id вопроса для ответов мы ждём его с бэка\r\n            for (let answer of params.data.answers || []) {\r\n              const diseasIds = answer.diseasIds ? answer.diseasIds.map(d => d.id) : ''\r\n\r\n              api\r\n                .structure('Answer')\r\n                .setData('answer',\r\n                  {\r\n                    ...answer,\r\n                    diseasIds: diseasIds,\r\n                    PollItemId: r.result[0].id,\r\n                    pollId: \"ea2c5b4e-c670-494c-9d1a-36c15615bbe5\"\r\n                  }, { sessionID: '' })\r\n                .then((r) => {\r\n                  return {\r\n                    data: r.result[0]\r\n                  };\r\n                });\r\n            }\r\n\r\n            return {\r\n              data: r.result[0]\r\n            };\r\n          });\r\n      }\r\n    },\r\n    'answers': {\r\n      structure: 'Answer',\r\n      endPoint: 'answer',\r\n      formatData(data) {\r\n        if (data.diseasIds) {\r\n          data.diseasIds = data.diseasIds.map(i => i.id || i);\r\n        }\r\n        data.PollItemId = data.PollItemId.id;\r\n        return data;\r\n      }\r\n    }\r\n  },\r\n\r\n  delete: {\r\n    'vaccine': {\r\n      structure: 'Vaccine',\r\n      endPoint: 'addVaccine'\r\n    },\r\n    'diseas': {\r\n      structure: 'Diseas',\r\n      endPoint: 'addDiseas'\r\n    },\r\n    'questions': {\r\n      structure: 'PollItem',\r\n      endPoint: 'pollItem'\r\n    },\r\n    'answers': {\r\n      structure: 'Answer',\r\n      endPoint: 'answer'\r\n    }\r\n  },\r\n\r\n  deleteMany: {\r\n\r\n  }\r\n}","import Directual from 'directual-api';\r\nimport apiDictionary from './apiDictonary';\r\n\r\nconst api = new Directual({ apiHost: '/' });\r\n\r\n\r\nfunction getApiInfo(routeName, method = 'getList') {\r\n  const apiInfo = apiDictionary.[method][routeName];\r\n  if (!apiInfo) throw new Error('Нет api для такого запроса');\r\n  return apiInfo;\r\n}\r\n\r\nfunction getFormatIds(ids, apiInfo) {\r\n  return apiInfo.idsFormat ? apiInfo.idsFormat(ids) : ids;\r\n}\r\n\r\n\r\nexport default {\r\n  getList(resource, params) {\r\n    const apiInfo = getApiInfo(resource);\r\n    const page = params.pagination.page - 1;\r\n    const pageSize = params.pagination.perPage;\r\n    const sort = `${params.sort.field},${params.sort.order.toLowerCase()}`;\r\n    const filter = apiInfo.formFilter ? apiInfo.formFilter(params.filter) : params.filter;\r\n\r\n    return api\r\n      .structure(apiInfo.structure)\r\n      .getData(apiInfo.endPoint, { page, pageSize, sort, sessionID: '', ...filter })\r\n      .then((response) => ({\r\n        data: response.payload,\r\n        total: response.pageInfo.tableSize\r\n      }))\r\n      .catch((err) => console.log(err));\r\n  },\r\n\r\n  getOne(resource, params) {\r\n    const { id } = params;\r\n    const apiInfo = getApiInfo(resource, 'getOne');\r\n\r\n    return api\r\n      .structure(apiInfo.structure)\r\n      .getData(apiInfo.endPoint, { sessionID: '', ids: [id] })\r\n      .then((response) => ({\r\n        data: response.payload[0]\r\n      }))\r\n      .catch((err) => console.log(err));\r\n  },\r\n\r\n  getMany(resource, params) {\r\n    let { ids } = params;\r\n    const apiInfo = getApiInfo(resource, 'getMany');\r\n    ids = getFormatIds(ids, apiInfo);\r\n\r\n    return api\r\n      .structure(apiInfo.structure)\r\n      .getData(apiInfo.endPoint, { sessionID: '', ids: ids })\r\n      .then((response) => ({\r\n        data: response.payload\r\n      }))\r\n      .catch((err) => console.log(err));\r\n  },\r\n\r\n  getManyReference(resource, params) {\r\n    console.log('getManyReference', resource, params);\r\n  },\r\n\r\n  update(resource, params) {\r\n    const apiInfo = getApiInfo(resource, 'update');\r\n    const data = apiInfo.formatData ? apiInfo.formatData(params.data) : params.data;\r\n\r\n    // если есть иная реализация\r\n    if (apiInfo.ownLogick) return apiInfo.ownLogick(resource, params);\r\n\r\n    return api\r\n      .structure(apiInfo.structure)\r\n      .setData(apiInfo.endPoint, data, { sessionID: '' })\r\n      .then((r) => {\r\n        return {\r\n          data: r.result[0]\r\n        };\r\n      });\r\n  },\r\n\r\n  updateMany(resource, params) {\r\n    console.log('updateMany', resource, params);\r\n  },\r\n\r\n  create(resource, params) {\r\n    const apiInfo = getApiInfo(resource, 'create');\r\n    const data = apiInfo.formatData ? apiInfo.formatData(params.data) : params.data;\r\n\r\n    if (apiInfo.ownLogick) return apiInfo.ownLogick(resource, params);\r\n\r\n    return api\r\n      .structure(apiInfo.structure)\r\n      .setData(apiInfo.endPoint, data, { sessionID: '' })\r\n      .then((r) => {\r\n        return {\r\n          data: r.result[0]\r\n        };\r\n      });\r\n  },\r\n\r\n  delete(resource, params) {\r\n    const apiInfo = getApiInfo(resource, 'delete');\r\n    const filedToDelete = apiInfo.fieldToDelete || 'isDelete';\r\n    \r\n    return api\r\n      .structure(apiInfo.structure)\r\n      .setData(apiInfo.endPoint, { id: params.id, [filedToDelete]: true }, { sessionID: '' })\r\n      .then((r) => {\r\n        return {\r\n          data: r.result[0]\r\n        };\r\n      });\r\n  },\r\n\r\n  deleteMany(resource, params) {\r\n    console.log('deleteMany', resource, params);\r\n  }\r\n}","import * as React from 'react';\r\nimport { FC, Fragment, ReactElement } from 'react';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: { minWidth: theme.spacing(5) },\r\n    sidebarIsOpen: {\r\n        '& a': {\r\n            paddingLeft: theme.spacing(4),\r\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n        },\r\n    },\r\n    sidebarIsClosed: {\r\n        '& a': {\r\n            paddingLeft: theme.spacing(2),\r\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst SubMenu = ({\r\n    handleToggle,\r\n    sidebarIsOpen,\r\n    isOpen,\r\n    name,\r\n    icon,\r\n    children,\r\n    dense,\r\n}) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n\r\n    const header = (\r\n        <MenuItem dense={dense} button onClick={handleToggle}>\r\n            <ListItemIcon className={classes.icon}>\r\n                {isOpen ? <ExpandMore /> : icon}\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {translate(name)}\r\n            </Typography>\r\n        </MenuItem>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            {sidebarIsOpen || isOpen ? (\r\n                header\r\n            ) : (\r\n                <Tooltip title={translate(name)} placement=\"right\">\r\n                    {header}\r\n                </Tooltip>\r\n            )}\r\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                <List\r\n                    dense={dense}\r\n                    component=\"div\"\r\n                    disablePadding\r\n                    className={\r\n                        sidebarIsOpen\r\n                            ? classes.sidebarIsOpen\r\n                            : classes.sidebarIsClosed\r\n                    }\r\n                >\r\n                    {children}\r\n                </List>\r\n            </Collapse>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SubMenu;","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMediaQuery, Box } from '@material-ui/core';\r\nimport Book from '@material-ui/icons/Book';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Question from '@material-ui/icons/QuestionAnswer';\r\nimport ChatBubble from '@material-ui/icons/ChatBubble';\r\nimport AddComment from '@material-ui/icons/AddComment';\r\nimport {\r\n  useTranslate,\r\n  MenuItemLink\r\n} from 'react-admin';\r\nimport SubMenu from './SubMenu';\r\n\r\n\r\nconst Menu = ({ onMenuClick, logout, dense = false }) => {\r\n  const [state, setState] = useState({\r\n    menuCatalog: true,\r\n    menuSales: true,\r\n    menuCustomers: true,\r\n  });\r\n  const translate = useTranslate();\r\n  const isXSmall = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('xs')\r\n  );\r\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\r\n  useSelector((state) => state.theme); // force rerender on theme change\r\n\r\n  const handleToggle = (menu) => {\r\n    setState(state => ({ ...state, [menu]: !state[menu] }));\r\n  };\r\n\r\n  return (\r\n    <Box mt={1}>\r\n      {' '}\r\n      <MenuItemLink\r\n        to={`/vaccine`}\r\n        primaryText={\"вакцины\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<Book />}\r\n      />\r\n      <MenuItemLink\r\n        to={`/diseas`}\r\n        primaryText={\"болезни\"}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n        dense={dense}\r\n        leftIcon={<BugReport />}\r\n      />\r\n      <SubMenu\r\n        handleToggle={() => handleToggle('menuSales')}\r\n        isOpen={state.menuSales}\r\n        sidebarIsOpen={open}\r\n        name=\"вопросник\"\r\n        dense={dense}\r\n        icon={<Question />}\r\n      >\r\n        <MenuItemLink\r\n          to={`/questions`}\r\n          primaryText={\"вопросы\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          leftIcon={<ChatBubble />}\r\n          dense={dense}\r\n        />\r\n        <MenuItemLink\r\n          to={`/answers`}\r\n          primaryText={\"ответы\"}\r\n          onClick={onMenuClick}\r\n          sidebarIsOpen={open}\r\n          leftIcon={<AddComment />}\r\n          dense={dense}\r\n        />\r\n      </SubMenu>\r\n      {isXSmall && logout}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Menu;","import * as React from 'react';\r\nimport { cloneElement } from 'react';\r\nimport {\r\n  useListContext,\r\n  TopToolbar,\r\n  CreateButton,\r\n  ExportButton,\r\n  Button,\r\n  sanitizeListRestProps,\r\n} from 'react-admin';\r\nimport IconEvent from '@material-ui/icons/Event';\r\n\r\nexport const ListActions = (props) => {\r\n  const {\r\n    className,\r\n    exporter,\r\n    filters,\r\n    maxResults,\r\n    ...rest\r\n  } = props;\r\n  const {\r\n    currentSort,\r\n    resource,\r\n    displayedFilters,\r\n    filterValues,\r\n    hasCreate,\r\n    basePath,\r\n    selectedIds,\r\n    showFilter,\r\n    total,\r\n  } = useListContext();\r\n\r\n  return (\r\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\r\n      {filters && cloneElement(filters, {\r\n        resource,\r\n        showFilter,\r\n        displayedFilters,\r\n        filterValues,\r\n        context: 'button',\r\n      })}\r\n      <CreateButton basePath={basePath} label=\"создать\" />\r\n      <ExportButton\r\n        disabled={total === 0}\r\n        resource={resource}\r\n        sort={currentSort}\r\n        filterValues={filterValues}\r\n        maxResults={maxResults}\r\n        label=\"экспорт\"\r\n      />\r\n    </TopToolbar>\r\n  );\r\n};","import React from 'react';\r\nimport {\r\n  Datagrid,\r\n  List,\r\n  TextField,\r\n  Filter,\r\n  TextInput,\r\n  EditButton,\r\n} from 'react-admin';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport {ListActions} from '../../Layout';\r\n\r\nconst VaccineFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput source=\"q\" label=\"поиск\" always-on title=\"поиск\" />\r\n  </Filter>\r\n);\r\n\r\nconst VaccinePanel = ({ id, record, resource }) => {\r\n  return (\r\n    <div>\r\n      {record.diseases && record.diseases.map(d => (\r\n        <Chip color=\"primary\" key={d.id} clickable label={d.name} component={Link} to={`/diseas/${d.id}`} />\r\n      ))}\r\n      <Typography paragraph>\r\n        {record.description}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport const VaccineList = props => {\r\n  return (\r\n    <List {...props} filters={<VaccineFilter />} title=\"Список вакцин\" actions={<ListActions />}>\r\n      {/* <Datagrid rowClick=\"edit\" > */}\r\n      <Datagrid expand={<VaccinePanel />} isRowSelectable={r => false}>\r\n        {/* <TextField source=\"id\" label=\"id\" /> */}\r\n        <TextField source=\"name\" label=\"имя\" />\r\n        {/* <TextField source=\"description\" label=\"описание\" /> */}\r\n        {/* <ArrayField source=\"diseases\" label=\"болезни\">\r\n        <SingleFieldList >\r\n          <ReferenceField source=\"id\" reference=\"diseas\" >\r\n            <ChipField source=\"name\" />\r\n          </ReferenceField>\r\n        </SingleFieldList>\r\n      </ArrayField> */}\r\n        <EditButton label=\"редактировать\" color=\"default\" />\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};","import React from 'react';\r\nimport { Datagrid, Filter, List, TextField, TextInput } from 'react-admin';\r\nimport {ListActions} from '../../Layout';\r\n\r\nconst DiseasFilter = (props) => (\r\n  <Filter {...props}>\r\n    <TextInput label=\"поиск\" source=\"q\" always-on />\r\n  </Filter>\r\n);\r\n\r\nexport const DiseasList = props => (\r\n  <List {...props} title=\"Список болезней\" filters={<DiseasFilter/>} actions={<ListActions/>}>\r\n      <Datagrid rowClick=\"edit\">\r\n          {/* <TextField source=\"id\" label=\"id\" /> */}\r\n          <TextField source=\"name\" label=\"имя\" />\r\n          <TextField source=\"description\" label=\"описание\" />\r\n      </Datagrid>\r\n  </List>\r\n);","import React from 'react';\r\nimport {\r\n  ArrayInput,\r\n  Edit,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst VaccineTitle = ({ record }) => (<span>{record.name || \"Вакцина\"}</span>);\r\n\r\nexport const VaccineEdit = props => (\r\n  <Edit {...props} title={<VaccineTitle />}>\r\n    <SimpleForm>\r\n      <TextInput disabled source=\"id\" title=\"id\" fullWidth />\r\n      <TextInput source=\"name\" label=\"название\" helperText=\"название\" fullWidth />\r\n      <TextInput source=\"description\" label=\"описание\" helperText=\"описание\" multiline fullWidth />\r\n\r\n      <Typography variant=\"h5\" fullWidth>\r\n        <BugReport /> болезни для данной прививки\r\n      </Typography>\r\n      <ArrayInput source=\"diseases\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" fullWidth resettable >\r\n            <SelectInput source=\"name\" />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n\r\n      {/* <ReferenceArrayInput reference=\"diseas\" source=\"diseases\">\r\n        <SelectArrayInput>\r\n          <ChipField source=\"name\" />\r\n        </SelectArrayInput>\r\n      </ReferenceArrayInput> */}\r\n    </SimpleForm>\r\n  </Edit>\r\n);","import React from 'react';\r\nimport {\r\n  ArrayInput,\r\n  ChipField,\r\n  Create,\r\n  ReferenceArrayInput,\r\n  ReferenceInput,\r\n  SelectArrayInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst VaccineTitle = ({ record }) => (<span>{record.name || \"Вакцина\"}</span>);\r\n\r\nexport const VaccineCreate = props => (\r\n  <Create {...props} title={<VaccineTitle />}>\r\n    <SimpleForm>\r\n      <TextInput source=\"name\" fullWidth helperText=\"имя вакцины\" label=\"имя\" />\r\n      <TextInput source=\"description\" multiline fullWidth helperText=\"описание вакцины\" label=\"описание\" />\r\n\r\n      <Typography variant=\"h5\" fullWidth>\r\n        <BugReport/> болезни для данной прививки\r\n      </Typography>\r\n      <ArrayInput source=\"diseases\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" fullWidth>\r\n            <SelectInput source=\"name\" helperText=\"болезнь\" resettable />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);","import React from 'react';\r\nimport { Edit, SimpleForm, TextInput } from 'react-admin';\r\n\r\nconst DiseasTitle = ({record}) => (<span>{record.name || \"Болезнь\"}</span>);\r\n\r\nexport const DiseasEdit = props => (\r\n  <Edit {...props} title={<DiseasTitle/>}>\r\n      <SimpleForm>\r\n          <TextInput source=\"id\" disabled />\r\n          <TextInput source=\"name\" label=\"название\" fullWidth helperText=\"название для болезни\" />\r\n          <TextInput source=\"description\" label=\"описание\" fullWidth helperText=\"описание для болезни\" />\r\n      </SimpleForm>\r\n  </Edit>\r\n);","import React from 'react';\r\nimport { Create, SimpleForm, TextInput } from 'react-admin';\r\n\r\nconst DiseasTitle = ({ record }) => (<span>{record.name || \"Болезнь\"}</span>);\r\n\r\nexport const DiseasCreate = props => (\r\n  <Create {...props} title={<DiseasTitle />}>\r\n    <SimpleForm>\r\n      <TextInput source=\"name\" fullWidth helperText=\"название болезни\" label=\"название\" />\r\n      <TextInput source=\"description\" helperText=\"описание болезни\" label=\"описание\" multiline fullWidth />\r\n    </SimpleForm>\r\n  </Create>\r\n);","import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Title } from 'react-admin';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default () => (\r\n  <Card>\r\n    <Title title=\"Не нашлось\" />\r\n    <CardContent>\r\n      <h1>Ничего не нашлось</h1>\r\n\r\n      <Typography>\r\n        <Link to=\"/vaccine\">к вакцинам</Link>\r\n      </Typography>\r\n      <Typography>\r\n        <Link to=\"/diseas\">к болезням</Link>\r\n      </Typography>\r\n    </CardContent>\r\n  </Card>\r\n);","import indigo from '@material-ui/core/colors/indigo';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport red from '@material-ui/core/colors/red';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: blue,\r\n    error: red,\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Arial',\r\n      'sans-serif',\r\n    ].join(','),\r\n  },\r\n  overrides: {\r\n    MuiButton: { \r\n      root: { \r\n        color: blue,\r\n      },\r\n    },\r\n  },\r\n});","import React from 'react';\r\nimport { Datagrid, EditButton, List, TextField } from 'react-admin';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListActions } from '../../Layout';\r\n\r\n\r\nconst QuestionPanel = ({ id, record, resource }) => {\r\n  return (\r\n    <div>\r\n      {record.answers && record.answers.map(d => (\r\n        <Chip color=\"primary\" key={d.id} clickable label={d.text} component={Link} to={`/answers/${d.id}`} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const QuestionList = props => (\r\n  <List {...props} title=\"Вопросы\" actions={<ListActions />}>\r\n    <Datagrid expand={<QuestionPanel />} isRowSelectable={r => false}>\r\n      {/* <TextField source=\"id\" /> */}\r\n      <TextField source=\"question\" />\r\n      {/* <ArrayField source=\"answers\"><SingleFieldList><ChipField source=\"text\" /></SingleFieldList></ArrayField> */}\r\n      <EditButton label=\"редактировать\" color=\"default\" />\r\n    </Datagrid>\r\n  </List>\r\n);","import React from 'react';\r\nimport {\r\n  ArrayInput,\r\n  Edit,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChatBubble from '@material-ui/icons/ChatBubble';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst QuestionTitle = ({ record }) => (<span>{record.question || \"вопрос\"}</span>);\r\n\r\nexport const QuestionEdit = props => (\r\n  <Edit {...props} title={<QuestionTitle />}>\r\n    <SimpleForm>\r\n      <TextInput source=\"question\" helperText=\"вопрос для опросника\" label=\"вопрос\" fullWidth />\r\n\r\n      <Typography variant=\"h6\">\r\n        Ответы на этот вопрос\r\n      </Typography>\r\n      <ArrayInput source=\"answers\" label=\"\">\r\n        <SimpleFormIterator \r\n        addButton={<Button variant=\"contained\" color=\"secondary\">Добавить ответ</Button>}\r\n        removeButton={<Button variant=\"contained\">удалить</Button>}>\r\n          <Typography style={{ padding: 5 }}>\r\n            <ChatBubble fontSize=\"small\" style={{ verticalAlign: 'bottom' }} /> ответ\r\n          </Typography>\r\n          <TextInput source=\"text\" helperText=\"Ответ для этого вопроса\" label=\"Ответ\" />\r\n          <Typography>\r\n            болезни для этого вопроса\r\n          </Typography>\r\n          <ArrayInput source=\"diseasIds\" label=\"\">\r\n            <SimpleFormIterator \r\n            addButton={<Button variant=\"outlined\" color=\"secondary\">Добавить болезнь</Button>}\r\n            removeButton={<Button variant=\"outlined\">удалить</Button>}>\r\n              <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" resettable >\r\n                <SelectInput source=\"name\" />\r\n              </ReferenceInput>\r\n            </SimpleFormIterator>\r\n          </ArrayInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n    </SimpleForm>\r\n  </Edit>\r\n);","import React from 'react';\r\nimport {\r\n  ArrayInput,\r\n  Create,\r\n  ReferenceInput,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst QuestionCreateTitle = ({ record }) => (<span>Создание вопроса</span>);\r\n\r\nexport const QuestionCreate = props => (\r\n  <Create {...props} title={<QuestionCreateTitle />}>\r\n    <SimpleForm>\r\n      <TextInput source=\"question\" helperText=\"вопрос для опросника\" label=\"вопрос\" fullWidth />\r\n\r\n      <Typography variant=\"h6\">\r\n        Ответы на этот вопрос\r\n      </Typography>\r\n      <ArrayInput source=\"answers\" label=\"\">\r\n        <SimpleFormIterator\r\n          addButton={<Button variant=\"contained\" color=\"secondary\">Добавить ответ</Button>}\r\n          removeButton={<Button variant=\"contained\">удалить</Button>}>\r\n          <TextInput source=\"text\" helperText=\"Ответ для этого вопроса\" label=\"Ответ\" />\r\n          <Typography>\r\n            болезни для этого вопроса\r\n          </Typography>\r\n          <ArrayInput source=\"diseasIds\" label=\"\">\r\n            <SimpleFormIterator\r\n              addButton={<Button variant=\"outlined\" color=\"secondary\">Добавить болезнь</Button>}\r\n              removeButton={<Button variant=\"outlined\">удалить</Button>}\r\n            >\r\n              <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" resettable >\r\n                <SelectInput source=\"name\" />\r\n              </ReferenceInput>\r\n            </SimpleFormIterator>\r\n          </ArrayInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n    </SimpleForm>\r\n  </Create>\r\n);","import React from 'react';\r\nimport {\r\n  Datagrid,\r\n  List,\r\n  ReferenceField,\r\n  TextField,\r\n  EditButton\r\n} from 'react-admin';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport { Link } from 'react-router-dom';\r\nimport {ListActions} from '../../Layout';\r\n\r\nconst AnswerPanel = ({ id, record, resource }) => {\r\n  return (\r\n    <div>\r\n      {record.diseasIds && record.diseasIds.map(d => (\r\n        <Chip \r\n        color=\"primary\" \r\n        key={d.id} \r\n        clickable \r\n        label={d.name} \r\n        component={Link} \r\n        to={`/diseas/${d.id}`}\r\n        style={{\r\n          background: orange[500],\r\n        }} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AnswerTitle = (r) => (<span>Список ответов</span>);\r\n\r\nexport const AnswerList = props => (\r\n  <List {...props} actions={<ListActions/>} title={<AnswerTitle/>}>\r\n    <Datagrid expand={<AnswerPanel/>} title=\"Ответы\" isRowSelectable={r => false}>\r\n      <ReferenceField source=\"PollItemId.id\" reference=\"questions\">\r\n        <TextField source=\"question\" />\r\n      </ReferenceField>\r\n      <TextField source=\"text\" />\r\n      <EditButton label=\"редактировать\" />\r\n    </Datagrid>\r\n  </List>\r\n);","import React from 'react';\r\nimport {\r\n  Edit,\r\n  ReferenceInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  ArrayInput,\r\n  SimpleFormIterator,\r\n  SelectInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AnswerTitle = ({record}) => (<span>{record.text || \"редактирование ответа\"}</span>);\r\n\r\nexport const AnswerEdit = props => (\r\n  <Edit {...props} title={<AnswerTitle/>}>\r\n    <SimpleForm>\r\n      <ReferenceInput source=\"PollItemId.id\" reference=\"questions\" label=\"вопрос\" helperText=\"вопрос для опросника\" fullWidth>\r\n        <SelectInput optionText=\"question\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"text\" label=\"ответ\" fullWidth />\r\n      \r\n      <Typography>\r\n        Болезни для этого вопроса\r\n      </Typography>\r\n      <ArrayInput source=\"diseasIds\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" resettable fullWidth>\r\n            <SelectInput source=\"name\" />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n\r\n    </SimpleForm>\r\n  </Edit>\r\n);","import React from 'react';\r\nimport {\r\n  Create,\r\n  ReferenceInput,\r\n  SimpleForm,\r\n  TextInput,\r\n  ArrayInput,\r\n  SimpleFormIterator,\r\n  SelectInput\r\n} from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AnswerTitle = ({record}) => (<span>создание ответа</span>);\r\n\r\nexport const AnswerCreate = props => (\r\n  <Create {...props} title={<AnswerTitle/>}>\r\n    <SimpleForm>\r\n      <ReferenceInput source=\"PollItemId.id\" reference=\"questions\" label=\"вопрос\" helperText=\"вопрос для опросника\" fullWidth>\r\n        <SelectInput optionText=\"question\" />\r\n      </ReferenceInput>\r\n      <TextInput source=\"text\" label=\"ответ\" fullWidth />\r\n      \r\n      <Typography>\r\n        Болезни для этого вопроса\r\n      </Typography>\r\n      <ArrayInput source=\"diseasIds\" label=\"\">\r\n        <SimpleFormIterator addButton={<Button variant=\"contained\" color=\"secondary\">Добавить болезнь</Button>}>\r\n          <ReferenceInput source=\"id\" reference=\"diseas\" label=\"болезнь\" helperText=\"болезнь\" resettable fullWidth>\r\n            <SelectInput source=\"name\" />\r\n          </ReferenceInput>\r\n        </SimpleFormIterator>\r\n      </ArrayInput>\r\n\r\n    </SimpleForm>\r\n  </Create>\r\n);","import React from 'react';\r\nimport { Admin, EditGuesser, ListGuesser, Resource } from 'react-admin';\r\nimport { ProvideAuth } from './auth'\r\nimport PostIcon from '@material-ui/icons/Book';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\n\r\nimport './App.css';\r\n\r\nimport dataProvider from './entities/provider';\r\nimport { VaccineList } from './entities/vaccine/VaccineList';\r\nimport { DiseasList } from './entities/diseas/DiseasList';\r\nimport { VaccineEdit } from './entities/vaccine/VaccineEdit';\r\nimport { VaccineCreate } from './entities/vaccine/VaccineCreate';\r\nimport { DiseasEdit } from './entities/diseas/DiseasEdit';\r\nimport { DiseasCreate } from './entities/diseas/DiseasCreate';\r\nimport NotFound from './components/NotFound/NotFound';\r\nimport { theme } from './static/theme';\r\nimport { Menu } from './Layout';\r\nimport { QuestionList } from './entities/questions/QuestionsList';\r\nimport { QuestionEdit } from './entities/questions/QuestoinEdit';\r\nimport { QuestionCreate } from './entities/questions/CreateQuestion';\r\nimport { AnswerList } from './entities/answers/AnswersList';\r\nimport { AnswerEdit } from './entities/answers/AnswerEdit';\r\nimport { AnswerCreate } from './entities/answers/AnswerCreate';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <ProvideAuth>\r\n      <Admin\r\n        theme={theme}\r\n        dataProvider={dataProvider}\r\n        catchAll={NotFound}\r\n        menu={Menu}>\r\n\r\n        <Resource name=\"vaccine\" list={VaccineList} edit={VaccineEdit} icon={PostIcon} options={{\r\n          label: 'Вакцины'\r\n        }} create={VaccineCreate} />\r\n\r\n        <Resource name=\"diseas\" list={DiseasList} edit={DiseasEdit} icon={BugReport} options={{\r\n          label: 'Болезни'\r\n        }} create={DiseasCreate} />\r\n\r\n        <Resource name=\"questions\" list={QuestionList} edit={QuestionEdit} create={QuestionCreate} options={{\r\n          label: 'Вопросы'\r\n        }} />\r\n\r\n        <Resource name=\"answers\" list={AnswerList} edit={AnswerEdit} create={AnswerCreate} />\r\n\r\n      </Admin>\r\n    </ProvideAuth>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}